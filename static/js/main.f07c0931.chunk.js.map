{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["API_URL","loadTodos","a","limit","fetch","getTodos","json","loadUser","userId","getUsers","TodoList","state","title","status","handleChange","event","value","target","setState","filterByTitle","todos","props","lowerTitle","toLowerCase","filter","item","includes","selectOption","filterBySelect","activities","complite","completed","onUserSelection","this","filteredTodos","className","onChange","type","name","map","todo","classNames","checked","readOnly","onClick","id","React","Component","CurrentUser","user","reloadUser","prevProps","handleClick","email","phone","App","selectedUserId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f07c0931.chunk.js","sourcesContent":["const API_URL = 'https://mate.academy/students-api';\n\nexport const loadTodos = async (limit = 15) => {\n  const getTodos = await fetch(`${API_URL}/todos?limit=${limit}`);\n\n  return getTodos.json();\n};\n\nexport const loadUser = async (userId: number) => {\n  const getUsers = await fetch(`${API_URL}/users/${userId}`);\n\n  return getUsers.json();\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport './TodoList.scss';\n\ninterface Props {\n  todos: Todo[];\n  onUserSelection: (userId: number) => void;\n}\n\ninterface State {\n  title: string;\n  status: string;\n}\n\nexport class TodoList extends React.Component<Props, State> {\n  state: State = {\n    title: '',\n    status: '',\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    this.setState({ title: value });\n  };\n\n  filterByTitle = () => {\n    const { title } = this.state;\n    const { todos } = this.props;\n\n    const lowerTitle = title.toLowerCase();\n\n    return todos.filter(item => (\n      item.title.includes(lowerTitle)\n    ));\n  };\n\n  selectOption = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    this.setState({ status: value });\n  };\n\n  filterBySelect = () => {\n    const { status: activities } = this.state;\n\n    if (activities === 'active') {\n      return (\n        this.filterByTitle().filter(complite => (\n          complite.completed !== true\n        ))\n      );\n    }\n\n    if (activities === 'completed') {\n      return (\n        this.filterByTitle().filter(complite => (\n          complite.completed === true\n        ))\n      );\n    }\n\n    return (this.filterByTitle());\n  };\n\n  render() {\n    const { onUserSelection } = this.props;\n\n    const filteredTodos = this.filterBySelect();\n\n    return (\n      <div className=\"TodoList\" onChange={this.filterByTitle}>\n        <h2>Todos:</h2>\n\n        <input\n          type=\"text\"\n          value={this.state.title}\n          onChange={this.handleChange}\n        />\n\n        <select\n          name=\"activities\"\n          value={this.state.status}\n          onChange={this.selectOption}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {filteredTodos.map(todo => (\n              <li\n                key={todo.id}\n                className={classNames('TodoList__item',\n                  {\n                    'TodoList__item--checked': todo.completed,\n                    'TodoList__item--unchecked': !todo.completed,\n                  })}\n              >\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={todo.completed}\n                    readOnly\n                  />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className=\"\n                    TodoList__user-button\n                    TodoList__user-button--selected\n                    button\n                  \"\n                  type=\"button\"\n                  onClick={() => onUserSelection(todo.userId)}\n                >\n                  User&nbsp;\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n\n            <li className=\"TodoList__item TodoList__item--checked\">\n              <label>\n                <input type=\"checkbox\" checked readOnly />\n                <p>distinctio vitae autem nihil ut molestias quo</p>\n              </label>\n\n              <button\n                className=\"TodoList__user-button button\"\n                type=\"button\"\n              >\n                User&nbsp;#2\n              </button>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './CurrentUser.scss';\nimport { loadUser } from '../../api';\n\ninterface Props {\n  userId: number,\n  handleClick: (userId: number) => void,\n}\n\ninterface State {\n  user: User | null;\n}\n\nexport class CurrentUser extends React.Component<Props, State> {\n  state: State = {\n    user: null,\n  };\n\n  componentDidMount() {\n    this.reloadUser(this.props.userId);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.userId !== this.props.userId) {\n      this.reloadUser(this.props.userId);\n    }\n  }\n\n  async reloadUser(userId: number) {\n    const user = await loadUser(userId);\n\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n\n    const { handleClick } = this.props;\n\n    if (!user) {\n      return (\n        <div>User not found</div>\n      );\n    }\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {user.id}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">\n          {user.name}\n        </h3>\n        <p className=\"CurrentUser__email\">\n          {user.email}\n        </p>\n        <p className=\"CurrentUser__phone\">\n          {user.phone}\n        </p>\n\n        <button\n          className=\"button-clear\"\n          type=\"button\"\n          onClick={() => handleClick(0)}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { loadTodos } from './api';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\ninterface State {\n  todos: Todo[];\n  selectedUserId: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  async componentDidMount() {\n    const todos = await loadTodos();\n\n    this.setState({ todos });\n  }\n\n  handleClick = (userId: number) => {\n    this.setState({ selectedUserId: userId });\n  };\n\n  render() {\n    const { selectedUserId, todos } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            onUserSelection={this.handleClick}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                handleClick={this.handleClick}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}